[
  {
    "Label": "Share finished torrents updated",
    "Condition": {
      "$type": "ChatBeet.Queuing.Rules.Conditions.TitleCondition, ChatBeet.Queuing",
      "Match": "^Finished Torrent \"(.*)\""
    },
    "Target": {
      "Base": {
        "$type": "ChatBeet.Queuing.Rules.OutputBases.TemplatedOutputBase, ChatBeet.Queuing",
        "Template": "#ðŸ¥•"
      },
      "Pipes": []
    },
    "Type": 1,
    "Output": {
      "Base": {
        "$type": "ChatBeet.Queuing.Rules.OutputBases.TemplatedOutputBase, ChatBeet.Queuing",
        "Template": "{{Title}}"
      },
      "Pipes": [
        {
          "$type": "ChatBeet.Queuing.Rules.OutputPipes.RegexPipe, ChatBeet.Queuing",
          "Pattern": "^Finished Torrent \"(.*)\"",
          "OutputTemplate": "Torrent finished downloading: $1"
        }
      ]
    }
  },
  {
    "Label": "Say hello",
    "Condition": {
      "$type": "ChatBeet.Queuing.Rules.Conditions.AndCondition, ChatBeet.Queuing",
      "Conditions": [
        {
          "$type": "ChatBeet.Queuing.Rules.Conditions.TitleCondition, ChatBeet.Queuing",
          "Match": "^PRIVMSG",
          "IgnoreCase": true
        },
        {
          "$type": "ChatBeet.Queuing.Rules.Conditions.SourceCondition, ChatBeet.Queuing",
          "Match": "^irc:(.*)",
          "IgnoreCase": false
        },
        {
          "$type": "ChatBeet.Queuing.Rules.Conditions.BodyCondition, ChatBeet.Queuing",
          "Match": "ðŸ¥• hello",
          "IgnoreCase": true
        }
      ]
    },
    "Target": {
      "Base": {
        "$type": "ChatBeet.Queuing.Rules.OutputBases.TemplatedOutputBase, ChatBeet.Queuing",
        "Template": "{{Target}}"
      },
      "Pipes": []
    },
    "Type": 0,
    "Output": {
      "Base": {
        "$type": "ChatBeet.Queuing.Rules.OutputBases.TemplatedOutputBase, ChatBeet.Queuing",
        "Template": "{{Source}}"
      },
      "Pipes": [
        {
          "$type": "ChatBeet.Queuing.Rules.OutputPipes.RegexPipe, ChatBeet.Queuing",
          "Pattern": "^irc:(.*)",
          "OutputTemplate": "Hello $1! ðŸ™‚"
        }
      ]
    }
  },
  {
    "Label": "Stop! Wait a minute",
    "Condition": {
      "$type": "ChatBeet.Queuing.Rules.Conditions.AndCondition, ChatBeet.Queuing",
      "Conditions": [
        {
          "$type": "ChatBeet.Queuing.Rules.Conditions.TitleCondition, ChatBeet.Queuing",
          "Match": "^PRIVMSG",
          "IgnoreCase": true
        },
        {
          "$type": "ChatBeet.Queuing.Rules.Conditions.SourceCondition, ChatBeet.Queuing",
          "Match": "^irc:(.*)",
          "IgnoreCase": false
        },
        {
          "$type": "ChatBeet.Queuing.Rules.Conditions.BodyCondition, ChatBeet.Queuing",
          "Match": "stop([?!.]+)?",
          "IgnoreCase": true
        }
      ]
    },
    "Target": {
      "Base": {
        "$type": "ChatBeet.Queuing.Rules.OutputBases.TemplatedOutputBase, ChatBeet.Queuing",
        "Template": "{{Target}}"
      },
      "Pipes": []
    },
    "Type": 0,
    "Output": {
      "Base": {
        "$type": "ChatBeet.Queuing.Rules.OutputBases.TemplatedOutputBase, ChatBeet.Queuing",
        "Template": "{{Body}}"
      },
      "Pipes": [
        {
          "$type": "ChatBeet.Queuing.Rules.OutputPipes.RegexPipe, ChatBeet.Queuing",
          "pattern": "^stop([?!.]+)?",
          "outputTemplate": "Wait a minute$1",
          "IgnoreCase": true
        }
      ]
    }
  },
  {
    "Label": "Startup",
    "Condition": {
      "$type": "ChatBeet.Queuing.Rules.Conditions.AndCondition, ChatBeet.Queuing",
      "Conditions": [
        {
          "$type": "ChatBeet.Queuing.Rules.Conditions.TargetCondition, ChatBeet.Queuing",
          "Match": "system",
          "IgnoreCase": true
        },
        {
          "$type": "ChatBeet.Queuing.Rules.Conditions.SourceCondition, ChatBeet.Queuing",
          "Match": "startup",
          "IgnoreCase": false
        }
      ]
    },
    "Target": {
      "Base": {
        "$type": "ChatBeet.Queuing.Rules.OutputBases.TemplatedOutputBase, ChatBeet.Queuing",
        "Template": "#ðŸ¥•"
      },
      "Pipes": []
    },
    "Type": 0,
    "Output": {
      "Base": {
        "$type": "ChatBeet.Queuing.Rules.OutputBases.TemplatedOutputBase, ChatBeet.Queuing",
        "Template": "{{Body}}"
      },
      "Pipes": []
    }
  }
]